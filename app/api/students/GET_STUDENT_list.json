{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "textfilter"
      },
      {
        "type": "array",
        "name": "levelsfilter"
      },
      {
        "type": "text",
        "name": "offset"
      },
      {
        "type": "text",
        "name": "dir"
      },
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "limit"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "query",
        "module": "dbconnector",
        "action": "paged",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "s",
                "column": "*"
              }
            ],
            "table": {
              "name": "students",
              "alias": "s"
            },
            "joins": [],
            "query": "SELECT *\nFROM students AS s\nWHERE firstName LIKE :P1 /* {{$_GET.textfilter}} */ OR lastName LIKE :P2 /* {{$_GET.textfilter}} */\nORDER BY lastName ASC, firstName ASC",
            "params": [
              {
                "operator": "contains",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_GET.textfilter}}"
              },
              {
                "operator": "contains",
                "type": "expression",
                "name": ":P2",
                "value": "{{$_GET.textfilter}}"
              }
            ],
            "orders": [
              {
                "table": "s",
                "column": "lastName",
                "direction": "ASC"
              },
              {
                "table": "s",
                "column": "firstName",
                "direction": "ASC"
              }
            ],
            "primary": "uuid",
            "wheres": {
              "condition": "OR",
              "rules": [
                {
                  "id": "s.firstName",
                  "field": "s.firstName",
                  "type": "string",
                  "operator": "contains",
                  "value": "{{$_GET.textfilter}}",
                  "data": {
                    "table": "s",
                    "column": "firstName",
                    "type": "text",
                    "columnObj": {
                      "type": "string",
                      "maxLength": 255,
                      "primary": false,
                      "nullable": true,
                      "name": "firstName"
                    }
                  },
                  "operation": "LIKE"
                },
                {
                  "id": "s.lastName",
                  "field": "s.lastName",
                  "type": "string",
                  "operator": "contains",
                  "value": "{{$_GET.textfilter}}",
                  "data": {
                    "table": "s",
                    "column": "lastName",
                    "type": "text",
                    "columnObj": {
                      "type": "string",
                      "maxLength": 255,
                      "primary": false,
                      "nullable": true,
                      "name": "lastName"
                    }
                  },
                  "operation": "LIKE"
                }
              ],
              "conditional": "{{$_GET.textfilter}}",
              "valid": true
            }
          }
        },
        "output": true,
        "meta": [
          {
            "name": "offset",
            "type": "number"
          },
          {
            "name": "limit",
            "type": "number"
          },
          {
            "name": "total",
            "type": "number"
          },
          {
            "name": "page",
            "type": "object",
            "sub": [
              {
                "name": "offset",
                "type": "object",
                "sub": [
                  {
                    "name": "first",
                    "type": "number"
                  },
                  {
                    "name": "prev",
                    "type": "number"
                  },
                  {
                    "name": "next",
                    "type": "number"
                  },
                  {
                    "name": "last",
                    "type": "number"
                  }
                ]
              },
              {
                "name": "current",
                "type": "number"
              },
              {
                "name": "total",
                "type": "number"
              }
            ]
          },
          {
            "name": "data",
            "type": "array",
            "sub": [
              {
                "type": "text",
                "name": "uuid"
              },
              {
                "type": "number",
                "name": "id"
              },
              {
                "type": "text",
                "name": "firstName"
              },
              {
                "type": "text",
                "name": "lastName"
              },
              {
                "type": "date",
                "name": "dob"
              },
              {
                "type": "number",
                "name": "family"
              },
              {
                "type": "text",
                "name": "rollSheetComments"
              },
              {
                "type": "text",
                "name": "rollSheetMedical"
              },
              {
                "type": "text",
                "name": "additionalMedical"
              },
              {
                "type": "text",
                "name": "gender"
              },
              {
                "type": "number",
                "name": "level"
              },
              {
                "type": "text",
                "name": "age"
              },
              {
                "type": "number",
                "name": "familyold"
              },
              {
                "type": "text",
                "name": "classlevel_uuid"
              },
              {
                "type": "boolean",
                "name": "hadtrial"
              }
            ]
          }
        ],
        "outputType": "object"
      },
      {
        "name": "query_students",
        "module": "core",
        "action": "repeat",
        "options": {
          "repeat": "{{query.data}}",
          "outputFields": [],
          "outputFilter": "exclude",
          "exec": {
            "steps": {
              "name": "query_student_notes",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "SELECT",
                  "columns": [
                    {
                      "table": "student_notes",
                      "column": "priority",
                      "alias": "priority",
                      "aggregate": "MAX"
                    },
                    {
                      "table": "student_notes",
                      "column": "uuid",
                      "alias": "notes_count",
                      "aggregate": "COUNT"
                    }
                  ],
                  "table": {
                    "name": "student_notes"
                  },
                  "primary": "uuid",
                  "joins": [],
                  "groupBy": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "student_notes.student_uuid",
                        "field": "student_notes.student_uuid",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{uuid}}",
                        "data": {
                          "table": "student_notes",
                          "column": "student_uuid",
                          "type": "text",
                          "columnObj": {
                            "type": "string",
                            "maxLength": 50,
                            "primary": false,
                            "nullable": true,
                            "name": "student_uuid"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "student_notes.status",
                        "field": "student_notes.status",
                        "type": "string",
                        "operator": "equal",
                        "value": "open",
                        "data": {
                          "table": "student_notes",
                          "column": "status",
                          "type": "text",
                          "columnObj": {
                            "type": "enum",
                            "default": "'open'",
                            "maxLength": 6,
                            "primary": false,
                            "comment": "status to be 'open' or 'closed'",
                            "nullable": false,
                            "enumValues": [
                              "open",
                              "closed"
                            ],
                            "name": "status"
                          }
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "SELECT MAX(priority) AS priority, COUNT(uuid) AS notes_count\nFROM student_notes\nWHERE student_uuid = :P1 /* {{uuid}} */ AND status = 'open'",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{uuid}}"
                    }
                  ]
                }
              },
              "output": true,
              "meta": [
                {
                  "type": "number",
                  "name": "priority"
                },
                {
                  "type": "text",
                  "name": "notes_count"
                }
              ],
              "outputType": "array",
              "type": "dbconnector_single"
            }
          }
        },
        "output": true,
        "meta": [
          {
            "name": "$index",
            "type": "number"
          },
          {
            "name": "$number",
            "type": "number"
          },
          {
            "name": "$name",
            "type": "text"
          },
          {
            "name": "$value",
            "type": "object"
          },
          {
            "name": "uuid",
            "type": "text"
          },
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "firstName",
            "type": "text"
          },
          {
            "name": "lastName",
            "type": "text"
          },
          {
            "name": "dob",
            "type": "date"
          },
          {
            "name": "family",
            "type": "number"
          },
          {
            "name": "rollSheetComments",
            "type": "text"
          },
          {
            "name": "rollSheetMedical",
            "type": "text"
          },
          {
            "name": "additionalMedical",
            "type": "text"
          },
          {
            "name": "gender",
            "type": "text"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "age",
            "type": "text"
          },
          {
            "name": "familyold",
            "type": "number"
          },
          {
            "name": "classlevel_uuid",
            "type": "text"
          },
          {
            "name": "hadtrial",
            "type": "boolean"
          }
        ],
        "outputType": "array"
      }
    ]
  }
}