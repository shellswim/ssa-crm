{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "getSettings",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "settings",
                "column": "*"
              }
            ],
            "table": {
              "name": "settings"
            },
            "joins": [],
            "query": "SELECT *\nFROM settings",
            "params": []
          }
        },
        "output": true,
        "meta": [
          {
            "type": "text",
            "name": "name"
          },
          {
            "type": "text",
            "name": "value"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "countries",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "countries",
                "column": "*"
              }
            ],
            "table": {
              "name": "countries"
            },
            "joins": [],
            "query": "SELECT *\nFROM countries",
            "params": []
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "name"
          },
          {
            "type": "text",
            "name": "iso3"
          },
          {
            "type": "text",
            "name": "iso2"
          },
          {
            "type": "text",
            "name": "phonecode"
          },
          {
            "type": "text",
            "name": "capital"
          },
          {
            "type": "text",
            "name": "currency"
          },
          {
            "type": "text",
            "name": "currency_symbol"
          },
          {
            "type": "text",
            "name": "tld"
          },
          {
            "type": "text",
            "name": "native"
          },
          {
            "type": "text",
            "name": "region"
          },
          {
            "type": "text",
            "name": "subregion"
          },
          {
            "type": "text",
            "name": "timezones"
          },
          {
            "type": "text",
            "name": "translations"
          },
          {
            "type": "number",
            "name": "latitude"
          },
          {
            "type": "number",
            "name": "longitude"
          },
          {
            "type": "text",
            "name": "emoji"
          },
          {
            "type": "text",
            "name": "emojiU"
          },
          {
            "type": "datetime",
            "name": "created_at"
          },
          {
            "type": "datetime",
            "name": "updated_at"
          },
          {
            "type": "boolean",
            "name": "flag"
          },
          {
            "type": "text",
            "name": "wikiDataId"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "states",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "states",
                "column": "*"
              }
            ],
            "table": {
              "name": "states"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "states.country_id",
                  "field": "states.country_id",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{$_GET.countryid}}",
                  "data": {
                    "table": "states",
                    "column": "country_id",
                    "type": "text"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "orders": [
              {
                "table": "states",
                "column": "name",
                "direction": "ASC"
              }
            ],
            "query": "SELECT *\nFROM states\nWHERE country_id = :P1 /* {{$_GET.countryid}} */\nORDER BY name ASC",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_GET.countryid}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "name"
          },
          {
            "type": "number",
            "name": "country_id"
          },
          {
            "type": "text",
            "name": "country_code"
          },
          {
            "type": "text",
            "name": "fips_code"
          },
          {
            "type": "text",
            "name": "iso2"
          },
          {
            "type": "number",
            "name": "latitude"
          },
          {
            "type": "number",
            "name": "longitude"
          },
          {
            "type": "datetime",
            "name": "created_at"
          },
          {
            "type": "datetime",
            "name": "updated_at"
          },
          {
            "type": "boolean",
            "name": "flag"
          },
          {
            "type": "text",
            "name": "wikiDataId"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "localization",
        "module": "dbconnector",
        "action": "single",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [],
            "table": {
              "name": "countries"
            },
            "joins": [],
            "query": "SELECT *\nFROM countries\nWHERE id = :P1 /* {{$_GET.localizationid}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_GET.localizationid}}"
              }
            ],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "countries.id",
                  "field": "countries.id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{$_GET.localizationid}}",
                  "data": {
                    "table": "countries",
                    "column": "id",
                    "type": "number"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            }
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "name"
          },
          {
            "type": "text",
            "name": "iso3"
          },
          {
            "type": "text",
            "name": "iso2"
          },
          {
            "type": "text",
            "name": "phonecode"
          },
          {
            "type": "text",
            "name": "capital"
          },
          {
            "type": "text",
            "name": "currency"
          },
          {
            "type": "text",
            "name": "currency_symbol"
          },
          {
            "type": "text",
            "name": "tld"
          },
          {
            "type": "text",
            "name": "native"
          },
          {
            "type": "text",
            "name": "region"
          },
          {
            "type": "text",
            "name": "subregion"
          },
          {
            "type": "text",
            "name": "timezones"
          },
          {
            "type": "text",
            "name": "translations"
          },
          {
            "type": "number",
            "name": "latitude"
          },
          {
            "type": "number",
            "name": "longitude"
          },
          {
            "type": "text",
            "name": "emoji"
          },
          {
            "type": "text",
            "name": "emojiU"
          },
          {
            "type": "datetime",
            "name": "created_at"
          },
          {
            "type": "datetime",
            "name": "updated_at"
          },
          {
            "type": "boolean",
            "name": "flag"
          },
          {
            "type": "text",
            "name": "wikiDataId"
          }
        ],
        "outputType": "object"
      },
      {
        "name": "paymentTypeGroups",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "paymentTypes",
                "column": "pay_type_group"
              },
              {
                "table": "paymentTypes",
                "column": "group_order"
              }
            ],
            "table": {
              "name": "paymentTypes"
            },
            "joins": [],
            "query": "SELECT DISTINCT pay_type_group, group_order\nFROM paymentTypes\nORDER BY group_order ASC",
            "params": [],
            "distinct": true,
            "orders": [
              {
                "table": "paymentTypes",
                "column": "group_order",
                "direction": "ASC",
                "recid": 1
              }
            ]
          }
        },
        "meta": [
          {
            "type": "text",
            "name": "pay_type_group"
          },
          {
            "type": "number",
            "name": "group_order"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "payTypes_Subs",
        "module": "core",
        "action": "repeat",
        "options": {
          "repeat": "{{paymentTypeGroups}}",
          "outputFields": [
            "pay_type_group",
            "group_order"
          ],
          "exec": {
            "steps": {
              "name": "paymentTypes",
              "module": "dbconnector",
              "action": "select",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "SELECT",
                  "columns": [],
                  "table": {
                    "name": "paymentTypes"
                  },
                  "joins": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "paymentTypes.pay_type_group",
                        "field": "paymentTypes.pay_type_group",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{pay_type_group}}",
                        "data": {
                          "table": "paymentTypes",
                          "column": "pay_type_group",
                          "type": "text"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "SELECT *\nFROM paymentTypes\nWHERE pay_type_group = :P1 /* {{pay_type_group}} */",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{pay_type_group}}"
                    }
                  ]
                }
              },
              "output": true,
              "meta": [
                {
                  "type": "number",
                  "name": "id"
                },
                {
                  "type": "text",
                  "name": "pay_type"
                },
                {
                  "type": "text",
                  "name": "pay_type_group"
                },
                {
                  "type": "number",
                  "name": "group_order"
                }
              ],
              "outputType": "array"
            }
          }
        },
        "meta": [
          {
            "name": "$index",
            "type": "number"
          },
          {
            "name": "$number",
            "type": "number"
          },
          {
            "name": "$name",
            "type": "text"
          },
          {
            "name": "$value",
            "type": "object"
          },
          {
            "name": "pay_type_group",
            "type": "text"
          },
          {
            "name": "group_order",
            "type": "number"
          },
          {
            "name": "paymentTypes",
            "type": "array",
            "sub": [
              {
                "type": "number",
                "name": "id"
              },
              {
                "type": "text",
                "name": "pay_type"
              },
              {
                "type": "text",
                "name": "pay_type_group"
              },
              {
                "type": "number",
                "name": "group_order"
              }
            ]
          }
        ],
        "outputType": "array",
        "output": true
      },
      {
        "name": "query_levels",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "classLevels",
                "column": "id"
              },
              {
                "table": "classLevels",
                "column": "name"
              },
              {
                "table": "classLevels",
                "column": "isValid"
              },
              {
                "table": "classLevels",
                "column": "colour"
              },
              {
                "table": "classLevels",
                "column": "order"
              },
              {
                "table": "classLevels",
                "column": "classType"
              },
              {
                "table": "classTypes",
                "column": "longName"
              },
              {
                "table": "classTypes",
                "column": "shortName"
              },
              {
                "table": "classLevels",
                "column": "textcolour"
              },
              {
                "table": "classLevels",
                "column": "uuid"
              }
            ],
            "table": {
              "name": "classLevels"
            },
            "joins": [
              {
                "table": "classTypes",
                "column": "*",
                "type": "INNER",
                "clauses": {
                  "condition": "AND",
                  "rules": [
                    {
                      "table": "classTypes",
                      "column": "id",
                      "operator": "equal",
                      "value": {
                        "table": "classLevels",
                        "column": "classType"
                      },
                      "operation": "="
                    }
                  ]
                }
              }
            ],
            "query": "SELECT classLevels.id, classLevels.name, classLevels.isValid, classLevels.colour, classLevels.order, classLevels.classType, classTypes.longName, classTypes.shortName, classLevels.textcolour, classLevels.uuid\nFROM classLevels\nINNER JOIN classTypes ON (classTypes.id = classLevels.classType)\nWHERE classLevels.isValid = true\nORDER BY classLevels.order ASC",
            "params": [],
            "orders": [
              {
                "table": "classLevels",
                "column": "order",
                "direction": "ASC",
                "recid": 1
              }
            ],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "classLevels.isValid",
                  "field": "classLevels.isValid",
                  "type": "boolean",
                  "operator": "equal",
                  "value": true,
                  "data": {
                    "table": "classLevels",
                    "column": "isValid",
                    "type": "boolean"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            }
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "name"
          },
          {
            "type": "boolean",
            "name": "isValid"
          },
          {
            "type": "text",
            "name": "colour"
          },
          {
            "type": "number",
            "name": "order"
          },
          {
            "type": "number",
            "name": "classType"
          },
          {
            "type": "text",
            "name": "longName"
          },
          {
            "type": "text",
            "name": "shortName"
          },
          {
            "type": "text",
            "name": "textcolour"
          },
          {
            "type": "text",
            "name": "uuid"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "query_enroltypes",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "sql": {
            "type": "SELECT",
            "columns": [],
            "table": {
              "name": "enrolmentTypes"
            },
            "joins": [],
            "query": "SELECT *\nFROM enrolmentTypes",
            "params": []
          },
          "connection": "db"
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "type"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "query_relationships",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "relationships",
                "column": "id"
              },
              {
                "table": "relationships",
                "column": "type"
              }
            ],
            "table": {
              "name": "relationships"
            },
            "joins": [],
            "orders": [
              {
                "table": "relationships",
                "column": "id",
                "direction": "ASC"
              }
            ],
            "query": "SELECT id, type\nFROM relationships\nORDER BY id ASC",
            "params": []
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "type"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "query_contacttypes",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "contactTypes",
                "column": "id"
              },
              {
                "table": "contactTypes",
                "column": "type"
              },
              {
                "table": "contactTypes",
                "column": "match",
                "alias": "typesmatch"
              },
              {
                "table": "contactTypes",
                "column": "abbr"
              }
            ],
            "table": {
              "name": "contactTypes"
            },
            "joins": [],
            "query": "SELECT id, type, match AS typesmatch, abbr\nFROM contactTypes\nORDER BY type ASC",
            "params": [],
            "orders": [
              {
                "table": "contactTypes",
                "column": "type",
                "direction": "ASC",
                "recid": 1
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "type"
          },
          {
            "type": "text",
            "name": "typesmatch"
          },
          {
            "type": "text",
            "name": "abbr"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "query_instructors",
        "module": "dbupdater",
        "action": "custom",
        "options": {
          "connection": "db",
          "sql": {
            "query": "SELECT *\nFROM staff s\nWHERE JSON_CONTAINS(s.staffTypes, '1') ORDER BY firstName, lastName\n",
            "params": [
              {
                "name": ":P1",
                "value": "",
                "test": "33"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "firstName",
            "type": "text"
          },
          {
            "name": "lastName",
            "type": "text"
          },
          {
            "name": "phone",
            "type": "text"
          },
          {
            "name": "email",
            "type": "text"
          },
          {
            "name": "staffTypes",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "query_absencetypes",
        "module": "dbupdater",
        "action": "custom",
        "options": {
          "connection": "db",
          "sql": {
            "query": "SELECT SUBSTRING(COLUMN_TYPE,5) AS types\nFROM information_schema.COLUMNS\nWHERE TABLE_SCHEMA='ssa-crm' \n    AND TABLE_NAME='absences'\n    AND COLUMN_NAME='status'",
            "params": []
          }
        },
        "output": true,
        "meta": [
          {
            "name": "types",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "absence_types",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{query_absencetypes[0].types.replace('(','').replace(')','').replace('\\'', '').split(',')}}"
        },
        "meta": [],
        "outputType": "text",
        "output": true
      }
    ]
  }
}