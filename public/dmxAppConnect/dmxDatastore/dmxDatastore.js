/*!
 DMXzone Datastore
 Version: 1.0.2
 (c) 2022 DMXzone.com
 @build 2022-02-17 11:06:09
 */
dmx.Component("datastore",{initialData:function(){return{data:[]}},attributes:{session:{type:Boolean,default:!1},columns:{type:Object,default:{}}},methods:{insert:function(t){this._insert(t),this._store()},update:function(t,e){this._update(t,e),this._store()},upsert:function(t,e){this._filter(t).length?this._update(t,e):this._insert(e),this._store()},delete:function(t){this._delete(t),this._store()},clear:function(){this.records=[],this.lastid=0,this._store()},get:function(t){return this._filter(t)}},events:{inserted:Event,updated:Event,deleted:Event},render:function(t){this.$node=null,this.store=window[this.props.session?"sessionStorage":"localStorage"],this.records=[],this.lastid=0;try{var e=this.store.getItem("datastore_"+this.name);e&&((e=JSON.parse(e)).records&&(this.records=e.records),e.lastid&&(this.lastid=e.lastid))}catch(t){console.warn("Error parsing datastore",t)}this._setData()},update:function(t){dmx.equal(t.columns,this.props.columns)||this._setData()},_filter:function(r){return"number"==typeof r&&(r={$id:r}),this.records.filter(function(t){if(Array.isArray(r)){for(var e=0;e<r.length;e++)for(var s in r[e])if(t[s]===r[e][s])return!0}else for(var s in r)if(t[s]===r[s])return!0;return!1})},_parseData:function(t){return"object"==typeof t&&!Array.isArray(t)},_mergeData:function(t,e){var s=Object.assign({},t);for(var r in e){var i=e[r];"string"==typeof i&&-1!=i.indexOf("{{")&&(i=dmx.parse(i,new dmx.DataScope(t,this))),s[r]=i}return s},_insert:function(t){var e={inserted:[],deleted:[]};if(Array.isArray(t))for(var s=0;s<t.length;s++){var r=this._mergeData({$id:++this.lastid},t[s]);this.records.push(r),e.inserted.push(r)}else{r=this._mergeData({$id:++this.lastid},t);this.records.push(r),e.inserted.push(r)}this.dispatchEvent("inserted",null,e)},_update:function(t,s){if(this._parseData(s)){var r={inserted:[],deleted:[]};this._filter(t).forEach(function(t){var e=this._mergeData(t,s);dmx.equal(t,e)||(r.deleted.push(dmx.clone(t)),r.inserted.push(dmx.clone(e)),Object.assign(t,e))},this),this.dispatchEvent("updated",null,r)}else console.warn("Invalid data!",s)},_delete:function(s){"number"==typeof s&&(s={$id:s});var r={inserted:[],deleted:[]};this.records=this.records.filter(function(t){for(var e in s)if(t[e]===s[e])return r.deleted.push(dmx.clone(t)),!1;return!0}),this.dispatchEvent("deleted",null,r)},_store:function(){var t=JSON.stringify({records:this.records,lastid:this.lastid});t!==this.store.getItem("datastore_"+this.name)&&(this.store.setItem("datastore_"+this.name,t),this._setData())},_setData:function(){var t=dmx.clone(this.records);if("object"==typeof this.props.columns)for(var e in t){var s=t[e],r=new dmx.DataScope(Object.assign({$value:s,$index:e,$key:e},s),this);for(var i in this.props.columns){var n=this.props.columns[i];"string"==typeof n&&n.startsWith("{{")&&(n=dmx.parse(n,r)),s[i]=n}}this.set("data",t)}});
//# sourceMappingURL=../maps/dmxDatastore.js.map
